: parse-input ( -- input ) 
    {
        "input.txt" get-str-at-path str-trim "\n" str-split [ :line 
            {$line "\t" str-split [str-trim str>int] vec-each}
        ] vec-each
    }
; 


: extent ( row comparison -- extent ) 
    :compare :row
    $row 0 vec-at :extent
    $row [dup $extent compare [:extent][drop] if] vec-each
    $extent
;

: largest ( row -- largest ) [>] extent ;
: smallest ( row -- smallest ) [<] extent ;

: checksum ( input -- checksum ) 
    0 :sum
    [ dup largest swap smallest  - $sum + :sum ] vec-each
    $sum
;

: day-2.1 ( -- ) parse-input checksum println ;


: neq ( a b -- ? ) = not ;
: div-sum ( input -- sum ) 
    0 :sum
    [ :row
        $row [ :i 
            $row [ :j
                $j $i divisor? $i $j neq and [ 
                   $j $i / $sum + :sum ] when
            ] vec-each 
        ] vec-each 
    ] vec-each
    $sum
;

/*
: parse-input ( -- input ) 
{ 
    { 5 9 2 8 }
    { 9 4 7 3 }
    { 3 8 6 5 }
}
;
*/

: day-2.2 ( -- ) parse-input div-sum println ;

day-2.2
